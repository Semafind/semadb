// Code generated by command: go run euclidean.go -out ../euclidean.s -stubs ../euclidean_stub.go -pkg asm. DO NOT EDIT.

#include "textflag.h"

// func SquaredEuclideanDistance(x []float32, y []float32) float32
// Requires: AVX, FMA3, SSE
TEXT Â·SquaredEuclideanDistance(SB), NOSPLIT, $0-52
	MOVQ   x_base+0(FP), AX
	MOVQ   y_base+24(FP), CX
	MOVQ   x_len+8(FP), DX
	VXORPS Y0, Y0, Y0
	VXORPS Y1, Y1, Y1
	VXORPS Y2, Y2, Y2
	VXORPS Y1, Y1, Y1
	VXORPS Y3, Y3, Y3
	VXORPS Y1, Y1, Y1
	VXORPS Y4, Y4, Y4
	VXORPS Y1, Y1, Y1

blockloop:
	CMPQ        DX, $0x00000020
	JL          tail
	VMOVUPS     (AX), Y1
	VMOVUPS     32(AX), Y5
	VMOVUPS     64(AX), Y6
	VMOVUPS     96(AX), Y7
	VSUBPS      (CX), Y1, Y1
	VFMADD231PS Y1, Y1, Y0
	VSUBPS      32(CX), Y5, Y1
	VFMADD231PS Y1, Y1, Y2
	VSUBPS      64(CX), Y6, Y1
	VFMADD231PS Y1, Y1, Y3
	VSUBPS      96(CX), Y7, Y1
	VFMADD231PS Y1, Y1, Y4
	ADDQ        $0x00000080, AX
	ADDQ        $0x00000080, CX
	SUBQ        $0x00000020, DX
	JMP         blockloop

tail:
	VXORPS X1, X1, X1
	VXORPS X5, X5, X5

tailloop:
	CMPQ        DX, $0x00000000
	JE          reduce
	VMOVSS      (AX), X5
	VSUBSS      (CX), X5, X5
	VFMADD231SS X5, X5, X1
	ADDQ        $0x00000004, AX
	ADDQ        $0x00000004, CX
	DECQ        DX
	JMP         tailloop

reduce:
	VADDPS       Y0, Y2, Y0
	VADDPS       Y0, Y3, Y0
	VADDPS       Y0, Y4, Y0
	VEXTRACTF128 $0x01, Y0, X2
	VADDPS       X0, X2, X0
	VADDPS       X0, X1, X0
	VHADDPS      X0, X0, X0
	VHADDPS      X0, X0, X0
	MOVSS        X0, ret+48(FP)
	RET
